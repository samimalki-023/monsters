{"version":3,"sources":["components/card/card.js","components/card-list/card-list.js","components/search-box/search-box.js","components/scroll/scroll.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","Scroll","style","overflow","border","height","children","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAGaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCFbC,G,MAAU,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SAA4BD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACtD,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCFTM,G,MAAW,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAcC,EAAhB,EAAgBA,aAAhB,OACpB,uBAAOZ,UAAU,SACjBa,KAAK,SAASF,YAAaA,EAC3BG,SAAUF,MCNDG,G,MAAS,SAAChB,GACrB,OACE,qBAAKiB,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACGpB,EAAMqB,aCsCEC,E,kDApCb,aAAe,IAAD,8BACZ,gBAaFT,aAAe,SAACU,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAbrC,EAAKC,MAAQ,CACXnB,SAAU,GACVgB,YAAa,IAJH,E,qDAQd,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAKA,EAASC,UAC3BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACf,SAASwB,S,oBAMzC,WACE,MAAgCC,KAAKN,MAA9BnB,EAAP,EAAOA,SAAUgB,EAAjB,EAAiBA,YACXU,EAAmB1B,EAAS2B,QAAO,SAAAhC,GAAO,OAC9CA,EAAQE,KAAK+B,cAAcC,SAASb,EAAYc,wBAElD,OACE,sBAAKtC,UAAU,MAAf,UACE,oDACA,cAAC,EAAD,CACAW,YAAY,kBACZC,aAAcqB,KAAKrB,eACnB,cAAC,EAAD,UACA,cAAC,EAAD,CAAWJ,SAAU0B,a,GA9BXK,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a89bbff1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n        <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n);","import React from \"react\";\r\nimport { Card } from \"../card/card\";\r\nimport './card-list.css';\r\n\r\n\r\nexport const CardList= props => (\r\n   <div className='card-list'>{props.monsters.map(monster => (\r\n   <Card key={monster.id} monster={monster} /> ) ) }</div>\r\n);","import React from \"react\";\r\n\r\n\r\nimport './search-box.css';\r\n\r\nexport const SearchBox= ({placeholder , handleChange }) => (\r\n    <input className='search' \r\n    type='search' placeholder={placeholder} \r\n    onChange={handleChange} />\r\n);","import React from 'react';\r\n\r\nexport const Scroll = (props) => {\r\n  return (\r\n    <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};","import React,{Component} from 'react';\nimport { CardList } from './components/card-list/card-list';\nimport { SearchBox } from './components/search-box/search-box';\nimport './App.css';\nimport { Scroll } from './components/scroll/scroll';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n    \n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response =>  response.json())\n    .then(users => this.setState({monsters:users}));\n  }\n\n  handleChange = (e) => {\n    this.setState({searchField: e.target.value})\n  }\n  render(){\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n      )\n    return(\n      <div className=\"App\">\n        <h1> Monsters Rolodex </h1>\n        <SearchBox \n        placeholder='search monsters'\n        handleChange={this.handleChange} />\n        <Scroll >\n        <CardList  monsters={filteredMonsters} />\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}